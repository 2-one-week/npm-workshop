.dice {
  width: 50px;
  height: 50px;
  border: 1px solid black;
  position: absolute;
  background: white;
  border-radius: 3px;

  > span {
    position: relative;
    display: flex;
    border-radius: 50%;
    border: 1px solid black;
    background-color: black;
    width: 10px;
    height: 10px;
  }

  &:nth-child(1) {
    transform: rotateY(0deg) translate3d(0, 0, 25px);

    > span {
      top: 19px;
      left: 19px;
    }
  }

  &:nth-child(2) {
    transform: rotateY(90deg) translate3d(0, 0, 25px);

    > span {
      &:nth-child(1) {
        top: 5px;
        left: 5px;
      }

      &:nth-child(2) {
        top: 22px;
        left: 32px;
      }
    }
  }

  &:nth-child(3) {
    transform: rotateY(180deg) translate3d(0, 0, 25px);

    > span {
      &:nth-child(1) {
        top: 2px;
      }

      &:nth-child(2) {
        top: 6px;
        left: 19px;
      }

      &:nth-child(3) {
        top: 10px;
        left: 35px;
      }
    }
  }

  &:nth-child(4) {
    transform: rotateY(270deg) translate3d(0, 0, 25px);

    > span {
      &:nth-child(1) {
        top: 10px;
        left: 6px;
      }

      &:nth-child(2) {
        top: 20px;
        left: 6px;
      }

      &:nth-child(3) {
        top: 7px;
        left: 30px;
      }

      &:nth-child(4) {
        top: -26px;
        left: 30px;
      }
    }
  }

  &:nth-child(5) {
    transform: rotateX(90deg) translate3d(0, 0, 25px);

    > span {
      &:nth-child(1) {
        top: 6px;
        left: 2px;
      }

      &:nth-child(2) {
        top: 22px;
        left: 2px;
      }

      &:nth-child(3) {
        top: 11px;
        left: 35px;
      }

      &:nth-child(4) {
        top: -30px;
        left: 35px;
      }

      &:nth-child(5) {
        top: -27px;
        left: 19px;
      }
    }
  }

  &:nth-child(6) {
    transform: rotateX(270deg) translate3d(0, 0, 25px);

    > span {
      &:nth-child(1) {
        top: 3px;
        left: 6px;
      }

      &:nth-child(2) {
        top: 6px;
        left: 6px;
      }

      &:nth-child(3) {
        top: 10px;
        left: 6px;
      }

      &:nth-child(4) {
        top: -34px;
        left: 30px;
      }

      &:nth-child(5) {
        top: -30px;
        left: 30px;
      }

      &:nth-child(6) {
        top: -26px;
        left: 30px;
      }
    }
  }
}

.diceSection {
  transform-style: preserve-3d;
  width: 50px;
  height: 50px;
  position: relative;
  perspective: 2000px;
  margin: 50px 50px 50px 125px;
  transform: rotateX(-20deg);
}

@keyframes dice {
  0% {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  }

  50% {
    transform: rotateX(-300deg) rotateY(360deg) rotateZ(-135deg);
  }

  100% {
    transform: rotateX(360deg) rotateY(360deg) rotateZ(360deg);
  }
}

.diceAnimation {
  /* 위에서 만든 @keyframes에 애니메이션 이름 */
  animation-name: dice;

  /* 애니메이션 재생 방향 
    normal : 애니메이션을 순방향으로 재생(기본값). 재생이 끝나면 첫 프레임부터 다시 시작
    alternate : 순방향으로 애니메이션을 시작하여 홀수번째는 순방향, 짝수 번째는 역방향으로 재생한다
    reverse : 애니메이션을 역방향으로 재생. 재생이 끝나면 마지막 프레임부터 다시 시작
    alternate-reverse : 역방향으로 애니메이션을 시작하여 홀수 번째는 역방향, 짝수 번째는 순방향으로 재생
  */
  animation-direaction: alternate;

  /* 애니메이션을 한 번 재생하는데 걸리는 시간 */
  animation-duration: 5s;

  /* 애니메이션 재생 횟수
    숫자 : 기본값은 1, 설정한 횟수만큼 애니메이션을 재생
       소수 일 경우 애니메이션 재생 도중 첫 프레임으로 돌아가 멈춤
       음수 일 경우 애니메이션을 재생하지 않음
    infinite : 애니메이션 무한 반복
  */
  animation-iteration-count: infinite;
}

.diceAnimationStop {
  /* 애니메이션 재생 여부
    running : 재생
    paused : 멈춤
  */
  animation-play-state: paused;
}

div {
  opacity: 0.5;
  backface-visibility: hidden;
}

section:hover > div {
  backface-visibility: visible;
}

button:not(:disabled):hover {
  cursor: pointer;
}
